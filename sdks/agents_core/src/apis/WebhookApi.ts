/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  WebhookPost200Response,
  WebhookPostRequest,
} from '../models/index';
import {
    WebhookPost200ResponseFromJSON,
    WebhookPost200ResponseToJSON,
    WebhookPostRequestFromJSON,
    WebhookPostRequestToJSON,
} from '../models/index';

export interface WebhookPostOperationRequest {
    webhookPostRequest?: WebhookPostRequest;
}

/**
 * 
 */
export class WebhookApi extends runtime.BaseAPI {

    /**
     */
    async webhookPostRaw(requestParameters: WebhookPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookPost200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/webhook`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WebhookPostRequestToJSON(requestParameters['webhookPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WebhookPost200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async webhookPost(requestParameters: WebhookPostOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookPost200Response> {
        const response = await this.webhookPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
