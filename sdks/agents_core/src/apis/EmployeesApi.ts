/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Employee,
  V1AgentsPost400Response,
} from '../models/index';
import {
    EmployeeFromJSON,
    EmployeeToJSON,
    V1AgentsPost400ResponseFromJSON,
    V1AgentsPost400ResponseToJSON,
} from '../models/index';

export interface V1EmployeesPostRequest {
    employee?: Employee;
}

/**
 * 
 */
export class EmployeesApi extends runtime.BaseAPI {

    /**
     * Get an employee
     * Get an employee
     */
    async v1EmployeesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Employee>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/employees`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EmployeeFromJSON));
    }

    /**
     * Get an employee
     * Get an employee
     */
    async v1EmployeesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Employee>> {
        const response = await this.v1EmployeesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Create an employee
     * Create an employee
     */
    async v1EmployeesPostRaw(requestParameters: V1EmployeesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Employee>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/employees`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EmployeeToJSON(requestParameters['employee']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmployeeFromJSON(jsonValue));
    }

    /**
     * Create an employee
     * Create an employee
     */
    async v1EmployeesPost(requestParameters: V1EmployeesPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Employee> {
        const response = await this.v1EmployeesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
