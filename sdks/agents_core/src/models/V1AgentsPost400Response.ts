/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface V1AgentsPost400Response
 */
export interface V1AgentsPost400Response {
    /**
     * 
     * @type {string}
     * @memberof V1AgentsPost400Response
     */
    error: string;
    /**
     * 
     * @type {string}
     * @memberof V1AgentsPost400Response
     */
    message: string;
    /**
     * 
     * @type {number}
     * @memberof V1AgentsPost400Response
     */
    statusCode: number;
    /**
     * 
     * @type {Date}
     * @memberof V1AgentsPost400Response
     */
    timestamp: Date;
    /**
     * 
     * @type {string}
     * @memberof V1AgentsPost400Response
     */
    path?: string;
    /**
     * 
     * @type {any}
     * @memberof V1AgentsPost400Response
     */
    details?: any | null;
}

/**
 * Check if a given object implements the V1AgentsPost400Response interface.
 */
export function instanceOfV1AgentsPost400Response(value: object): value is V1AgentsPost400Response {
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('statusCode' in value) || value['statusCode'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function V1AgentsPost400ResponseFromJSON(json: any): V1AgentsPost400Response {
    return V1AgentsPost400ResponseFromJSONTyped(json, false);
}

export function V1AgentsPost400ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1AgentsPost400Response {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'],
        'message': json['message'],
        'statusCode': json['statusCode'],
        'timestamp': (new Date(json['timestamp'])),
        'path': json['path'] == null ? undefined : json['path'],
        'details': json['details'] == null ? undefined : json['details'],
    };
}

export function V1AgentsPost400ResponseToJSON(json: any): V1AgentsPost400Response {
    return V1AgentsPost400ResponseToJSONTyped(json, false);
}

export function V1AgentsPost400ResponseToJSONTyped(value?: V1AgentsPost400Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': value['error'],
        'message': value['message'],
        'statusCode': value['statusCode'],
        'timestamp': ((value['timestamp']).toISOString()),
        'path': value['path'],
        'details': value['details'],
    };
}

