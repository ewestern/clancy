/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1TriggersPostRequest
 */
export interface V1TriggersPostRequest {
    /**
     * 
     * @type {string}
     * @memberof V1TriggersPostRequest
     */
    eventType: V1TriggersPostRequestEventTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof V1TriggersPostRequest
     */
    runId: string;
    /**
     * 
     * @type {string}
     * @memberof V1TriggersPostRequest
     */
    graphId: string;
    /**
     * 
     * @type {string}
     * @memberof V1TriggersPostRequest
     */
    orgId: string;
    /**
     * 
     * @type {string}
     * @memberof V1TriggersPostRequest
     */
    triggerType: V1TriggersPostRequestTriggerTypeEnum;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof V1TriggersPostRequest
     */
    payload: { [key: string]: any; };
}


/**
 * @export
 */
export const V1TriggersPostRequestEventTypeEnum = {
    RunIntent: 'run_intent'
} as const;
export type V1TriggersPostRequestEventTypeEnum = typeof V1TriggersPostRequestEventTypeEnum[keyof typeof V1TriggersPostRequestEventTypeEnum];

/**
 * @export
 */
export const V1TriggersPostRequestTriggerTypeEnum = {
    Manual: 'manual',
    Scheduled: 'scheduled',
    Api: 'api'
} as const;
export type V1TriggersPostRequestTriggerTypeEnum = typeof V1TriggersPostRequestTriggerTypeEnum[keyof typeof V1TriggersPostRequestTriggerTypeEnum];


/**
 * Check if a given object implements the V1TriggersPostRequest interface.
 */
export function instanceOfV1TriggersPostRequest(value: object): value is V1TriggersPostRequest {
    if (!('eventType' in value) || value['eventType'] === undefined) return false;
    if (!('runId' in value) || value['runId'] === undefined) return false;
    if (!('graphId' in value) || value['graphId'] === undefined) return false;
    if (!('orgId' in value) || value['orgId'] === undefined) return false;
    if (!('triggerType' in value) || value['triggerType'] === undefined) return false;
    if (!('payload' in value) || value['payload'] === undefined) return false;
    return true;
}

export function V1TriggersPostRequestFromJSON(json: any): V1TriggersPostRequest {
    return V1TriggersPostRequestFromJSONTyped(json, false);
}

export function V1TriggersPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1TriggersPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'eventType': json['event_type'],
        'runId': json['run_id'],
        'graphId': json['graph_id'],
        'orgId': json['org_id'],
        'triggerType': json['trigger_type'],
        'payload': json['payload'],
    };
}

export function V1TriggersPostRequestToJSON(json: any): V1TriggersPostRequest {
    return V1TriggersPostRequestToJSONTyped(json, false);
}

export function V1TriggersPostRequestToJSONTyped(value?: V1TriggersPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'event_type': value['eventType'],
        'run_id': value['runId'],
        'graph_id': value['graphId'],
        'org_id': value['orgId'],
        'trigger_type': value['triggerType'],
        'payload': value['payload'],
    };
}

