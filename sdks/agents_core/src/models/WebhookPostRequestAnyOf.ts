/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { WebhookPostRequestAnyOfPhase } from './WebhookPostRequestAnyOfPhase.js';
import {
    WebhookPostRequestAnyOfPhaseFromJSON,
    WebhookPostRequestAnyOfPhaseFromJSONTyped,
    WebhookPostRequestAnyOfPhaseToJSON,
    WebhookPostRequestAnyOfPhaseToJSONTyped,
} from './WebhookPostRequestAnyOfPhase.js';
import type { WebhookPostRequestAnyOfAgentsInner } from './WebhookPostRequestAnyOfAgentsInner.js';
import {
    WebhookPostRequestAnyOfAgentsInnerFromJSON,
    WebhookPostRequestAnyOfAgentsInnerFromJSONTyped,
    WebhookPostRequestAnyOfAgentsInnerToJSON,
    WebhookPostRequestAnyOfAgentsInnerToJSONTyped,
} from './WebhookPostRequestAnyOfAgentsInner.js';
import type { WebhookPostRequestAnyOfUnsatisfiedWorkflowsInner } from './WebhookPostRequestAnyOfUnsatisfiedWorkflowsInner.js';
import {
    WebhookPostRequestAnyOfUnsatisfiedWorkflowsInnerFromJSON,
    WebhookPostRequestAnyOfUnsatisfiedWorkflowsInnerFromJSONTyped,
    WebhookPostRequestAnyOfUnsatisfiedWorkflowsInnerToJSON,
    WebhookPostRequestAnyOfUnsatisfiedWorkflowsInnerToJSONTyped,
} from './WebhookPostRequestAnyOfUnsatisfiedWorkflowsInner.js';
import type { WebhookPostRequestAnyOfWorkflowsInner } from './WebhookPostRequestAnyOfWorkflowsInner.js';
import {
    WebhookPostRequestAnyOfWorkflowsInnerFromJSON,
    WebhookPostRequestAnyOfWorkflowsInnerFromJSONTyped,
    WebhookPostRequestAnyOfWorkflowsInnerToJSON,
    WebhookPostRequestAnyOfWorkflowsInnerToJSONTyped,
} from './WebhookPostRequestAnyOfWorkflowsInner.js';

/**
 * 
 * @export
 * @interface WebhookPostRequestAnyOf
 */
export interface WebhookPostRequestAnyOf {
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf
     */
    orgId: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf
     */
    type: WebhookPostRequestAnyOfTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf
     */
    timestamp: string;
    /**
     * 
     * @type {WebhookPostRequestAnyOfPhase}
     * @memberof WebhookPostRequestAnyOf
     */
    phase?: WebhookPostRequestAnyOfPhase;
    /**
     * 
     * @type {Array<WebhookPostRequestAnyOfWorkflowsInner>}
     * @memberof WebhookPostRequestAnyOf
     */
    workflows: Array<WebhookPostRequestAnyOfWorkflowsInner>;
    /**
     * 
     * @type {Array<WebhookPostRequestAnyOfUnsatisfiedWorkflowsInner>}
     * @memberof WebhookPostRequestAnyOf
     */
    unsatisfiedWorkflows: Array<WebhookPostRequestAnyOfUnsatisfiedWorkflowsInner>;
    /**
     * 
     * @type {Array<WebhookPostRequestAnyOfAgentsInner>}
     * @memberof WebhookPostRequestAnyOf
     */
    agents: Array<WebhookPostRequestAnyOfAgentsInner>;
}


/**
 * @export
 */
export const WebhookPostRequestAnyOfTypeEnum = {
    Employeestateupdate: 'employeestateupdate'
} as const;
export type WebhookPostRequestAnyOfTypeEnum = typeof WebhookPostRequestAnyOfTypeEnum[keyof typeof WebhookPostRequestAnyOfTypeEnum];


/**
 * Check if a given object implements the WebhookPostRequestAnyOf interface.
 */
export function instanceOfWebhookPostRequestAnyOf(value: object): value is WebhookPostRequestAnyOf {
    if (!('orgId' in value) || value['orgId'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('workflows' in value) || value['workflows'] === undefined) return false;
    if (!('unsatisfiedWorkflows' in value) || value['unsatisfiedWorkflows'] === undefined) return false;
    if (!('agents' in value) || value['agents'] === undefined) return false;
    return true;
}

export function WebhookPostRequestAnyOfFromJSON(json: any): WebhookPostRequestAnyOf {
    return WebhookPostRequestAnyOfFromJSONTyped(json, false);
}

export function WebhookPostRequestAnyOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookPostRequestAnyOf {
    if (json == null) {
        return json;
    }
    return {
        
        'orgId': json['orgId'],
        'type': json['type'],
        'timestamp': json['timestamp'],
        'phase': json['phase'] == null ? undefined : WebhookPostRequestAnyOfPhaseFromJSON(json['phase']),
        'workflows': ((json['workflows'] as Array<any>).map(WebhookPostRequestAnyOfWorkflowsInnerFromJSON)),
        'unsatisfiedWorkflows': ((json['unsatisfiedWorkflows'] as Array<any>).map(WebhookPostRequestAnyOfUnsatisfiedWorkflowsInnerFromJSON)),
        'agents': ((json['agents'] as Array<any>).map(WebhookPostRequestAnyOfAgentsInnerFromJSON)),
    };
}

export function WebhookPostRequestAnyOfToJSON(json: any): WebhookPostRequestAnyOf {
    return WebhookPostRequestAnyOfToJSONTyped(json, false);
}

export function WebhookPostRequestAnyOfToJSONTyped(value?: WebhookPostRequestAnyOf | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'orgId': value['orgId'],
        'type': value['type'],
        'timestamp': value['timestamp'],
        'phase': WebhookPostRequestAnyOfPhaseToJSON(value['phase']),
        'workflows': ((value['workflows'] as Array<any>).map(WebhookPostRequestAnyOfWorkflowsInnerToJSON)),
        'unsatisfiedWorkflows': ((value['unsatisfiedWorkflows'] as Array<any>).map(WebhookPostRequestAnyOfUnsatisfiedWorkflowsInnerToJSON)),
        'agents': ((value['agents'] as Array<any>).map(WebhookPostRequestAnyOfAgentsInnerToJSON)),
    };
}

