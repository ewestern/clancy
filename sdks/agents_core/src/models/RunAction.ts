/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime.js";
/**
 *
 * @export
 * @interface RunAction
 */
export interface RunAction {
  /**
   *
   * @type {string}
   * @memberof RunAction
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof RunAction
   */
  agentRunId: string;
  /**
   *
   * @type {string}
   * @memberof RunAction
   */
  providerId: string;
  /**
   *
   * @type {string}
   * @memberof RunAction
   */
  capabilityId: string;
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof RunAction
   */
  formattedRequest: { [key: string]: any };
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof RunAction
   */
  result: { [key: string]: any };
  /**
   *
   * @type {string}
   * @memberof RunAction
   */
  status: string;
  /**
   *
   * @type {Date}
   * @memberof RunAction
   */
  createdAt: Date;
}

/**
 * Check if a given object implements the RunAction interface.
 */
export function instanceOfRunAction(value: object): value is RunAction {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("agentRunId" in value) || value["agentRunId"] === undefined)
    return false;
  if (!("providerId" in value) || value["providerId"] === undefined)
    return false;
  if (!("capabilityId" in value) || value["capabilityId"] === undefined)
    return false;
  if (!("formattedRequest" in value) || value["formattedRequest"] === undefined)
    return false;
  if (!("result" in value) || value["result"] === undefined) return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  return true;
}

export function RunActionFromJSON(json: any): RunAction {
  return RunActionFromJSONTyped(json, false);
}

export function RunActionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RunAction {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    agentRunId: json["agentRunId"],
    providerId: json["providerId"],
    capabilityId: json["capabilityId"],
    formattedRequest: json["formattedRequest"],
    result: json["result"],
    status: json["status"],
    createdAt: new Date(json["createdAt"]),
  };
}

export function RunActionToJSON(json: any): RunAction {
  return RunActionToJSONTyped(json, false);
}

export function RunActionToJSONTyped(
  value?: RunAction | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    agentRunId: value["agentRunId"],
    providerId: value["providerId"],
    capabilityId: value["capabilityId"],
    formattedRequest: value["formattedRequest"],
    result: value["result"],
    status: value["status"],
    createdAt: value["createdAt"].toISOString(),
  };
}
