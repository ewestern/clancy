/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime.js";
import type { WebhookPostRequestAnyOf1ConnectionStatus } from "./WebhookPostRequestAnyOf1ConnectionStatus.js";
import {
  WebhookPostRequestAnyOf1ConnectionStatusFromJSON,
  WebhookPostRequestAnyOf1ConnectionStatusFromJSONTyped,
  WebhookPostRequestAnyOf1ConnectionStatusToJSON,
  WebhookPostRequestAnyOf1ConnectionStatusToJSONTyped,
} from "./WebhookPostRequestAnyOf1ConnectionStatus.js";

/**
 *
 * @export
 * @interface WebhookPostRequestAnyOf1
 */
export interface WebhookPostRequestAnyOf1 {
  /**
   *
   * @type {string}
   * @memberof WebhookPostRequestAnyOf1
   */
  type: WebhookPostRequestAnyOf1TypeEnum;
  /**
   *
   * @type {string}
   * @memberof WebhookPostRequestAnyOf1
   */
  orgId: string;
  /**
   *
   * @type {string}
   * @memberof WebhookPostRequestAnyOf1
   */
  userId: string;
  /**
   *
   * @type {string}
   * @memberof WebhookPostRequestAnyOf1
   */
  timestamp: string;
  /**
   *
   * @type {string}
   * @memberof WebhookPostRequestAnyOf1
   */
  providerId: string;
  /**
   *
   * @type {WebhookPostRequestAnyOf1ConnectionStatus}
   * @memberof WebhookPostRequestAnyOf1
   */
  connectionStatus: WebhookPostRequestAnyOf1ConnectionStatus;
  /**
   *
   * @type {string}
   * @memberof WebhookPostRequestAnyOf1
   */
  connectionId: string;
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof WebhookPostRequestAnyOf1
   */
  externalAccountMetadata: { [key: string]: any };
}

/**
 * @export
 */
export const WebhookPostRequestAnyOf1TypeEnum = {
  Providerconnectioncompleted: "providerconnectioncompleted",
} as const;
export type WebhookPostRequestAnyOf1TypeEnum =
  (typeof WebhookPostRequestAnyOf1TypeEnum)[keyof typeof WebhookPostRequestAnyOf1TypeEnum];

/**
 * Check if a given object implements the WebhookPostRequestAnyOf1 interface.
 */
export function instanceOfWebhookPostRequestAnyOf1(
  value: object,
): value is WebhookPostRequestAnyOf1 {
  if (!("type" in value) || value["type"] === undefined) return false;
  if (!("orgId" in value) || value["orgId"] === undefined) return false;
  if (!("userId" in value) || value["userId"] === undefined) return false;
  if (!("timestamp" in value) || value["timestamp"] === undefined) return false;
  if (!("providerId" in value) || value["providerId"] === undefined)
    return false;
  if (!("connectionStatus" in value) || value["connectionStatus"] === undefined)
    return false;
  if (!("connectionId" in value) || value["connectionId"] === undefined)
    return false;
  if (
    !("externalAccountMetadata" in value) ||
    value["externalAccountMetadata"] === undefined
  )
    return false;
  return true;
}

export function WebhookPostRequestAnyOf1FromJSON(
  json: any,
): WebhookPostRequestAnyOf1 {
  return WebhookPostRequestAnyOf1FromJSONTyped(json, false);
}

export function WebhookPostRequestAnyOf1FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WebhookPostRequestAnyOf1 {
  if (json == null) {
    return json;
  }
  return {
    type: json["type"],
    orgId: json["orgId"],
    userId: json["userId"],
    timestamp: json["timestamp"],
    providerId: json["providerId"],
    connectionStatus: WebhookPostRequestAnyOf1ConnectionStatusFromJSON(
      json["connectionStatus"],
    ),
    connectionId: json["connectionId"],
    externalAccountMetadata: json["externalAccountMetadata"],
  };
}

export function WebhookPostRequestAnyOf1ToJSON(
  json: any,
): WebhookPostRequestAnyOf1 {
  return WebhookPostRequestAnyOf1ToJSONTyped(json, false);
}

export function WebhookPostRequestAnyOf1ToJSONTyped(
  value?: WebhookPostRequestAnyOf1 | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    type: value["type"],
    orgId: value["orgId"],
    userId: value["userId"],
    timestamp: value["timestamp"],
    providerId: value["providerId"],
    connectionStatus: WebhookPostRequestAnyOf1ConnectionStatusToJSON(
      value["connectionStatus"],
    ),
    connectionId: value["connectionId"],
    externalAccountMetadata: value["externalAccountMetadata"],
  };
}
