/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const AgentActionStatus = {
    Success: 'success',
    Running: 'running',
    Error: 'error'
} as const;
export type AgentActionStatus = typeof AgentActionStatus[keyof typeof AgentActionStatus];


export function instanceOfAgentActionStatus(value: any): boolean {
    for (const key in AgentActionStatus) {
        if (Object.prototype.hasOwnProperty.call(AgentActionStatus, key)) {
            if (AgentActionStatus[key as keyof typeof AgentActionStatus] === value) {
                return true;
            }
        }
    }
    return false;
}

export function AgentActionStatusFromJSON(json: any): AgentActionStatus {
    return AgentActionStatusFromJSONTyped(json, false);
}

export function AgentActionStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentActionStatus {
    return json as AgentActionStatus;
}

export function AgentActionStatusToJSON(value?: AgentActionStatus | null): any {
    return value as any;
}

export function AgentActionStatusToJSONTyped(value: any, ignoreDiscriminator: boolean): AgentActionStatus {
    return value as AgentActionStatus;
}

