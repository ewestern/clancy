/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AgentStatus } from './AgentStatus';
import {
    AgentStatusFromJSON,
    AgentStatusFromJSONTyped,
    AgentStatusToJSON,
    AgentStatusToJSONTyped,
} from './AgentStatus';
import type { AgentScope } from './AgentScope';
import {
    AgentScopeFromJSON,
    AgentScopeFromJSONTyped,
    AgentScopeToJSON,
    AgentScopeToJSONTyped,
} from './AgentScope';
import type { T0 } from './T0';
import {
    T0FromJSON,
    T0FromJSONTyped,
    T0ToJSON,
    T0ToJSONTyped,
} from './T0';
import type { V1AgentsIdPutRequestCapabilitiesInner } from './V1AgentsIdPutRequestCapabilitiesInner';
import {
    V1AgentsIdPutRequestCapabilitiesInnerFromJSON,
    V1AgentsIdPutRequestCapabilitiesInnerFromJSONTyped,
    V1AgentsIdPutRequestCapabilitiesInnerToJSON,
    V1AgentsIdPutRequestCapabilitiesInnerToJSONTyped,
} from './V1AgentsIdPutRequestCapabilitiesInner';

/**
 * 
 * @export
 * @interface V1AgentsIdPutRequest
 */
export interface V1AgentsIdPutRequest {
    /**
     * 
     * @type {string}
     * @memberof V1AgentsIdPutRequest
     */
    orgId?: string;
    /**
     * 
     * @type {string}
     * @memberof V1AgentsIdPutRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof V1AgentsIdPutRequest
     */
    description?: string;
    /**
     * 
     * @type {AgentScope}
     * @memberof V1AgentsIdPutRequest
     */
    scope?: AgentScope;
    /**
     * 
     * @type {string}
     * @memberof V1AgentsIdPutRequest
     */
    ownerId?: string;
    /**
     * 
     * @type {AgentStatus}
     * @memberof V1AgentsIdPutRequest
     */
    status?: AgentStatus;
    /**
     * 
     * @type {Array<V1AgentsIdPutRequestCapabilitiesInner>}
     * @memberof V1AgentsIdPutRequest
     */
    capabilities?: Array<V1AgentsIdPutRequestCapabilitiesInner>;
    /**
     * 
     * @type {V1AgentsIdPutRequestCapabilitiesInner}
     * @memberof V1AgentsIdPutRequest
     */
    trigger?: V1AgentsIdPutRequestCapabilitiesInner;
    /**
     * 
     * @type {string}
     * @memberof V1AgentsIdPutRequest
     */
    prompt?: string;
    /**
     * 
     * @type {Array<T0>}
     * @memberof V1AgentsIdPutRequest
     */
    subagents?: Array<T0>;
}



/**
 * Check if a given object implements the V1AgentsIdPutRequest interface.
 */
export function instanceOfV1AgentsIdPutRequest(value: object): value is V1AgentsIdPutRequest {
    return true;
}

export function V1AgentsIdPutRequestFromJSON(json: any): V1AgentsIdPutRequest {
    return V1AgentsIdPutRequestFromJSONTyped(json, false);
}

export function V1AgentsIdPutRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1AgentsIdPutRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'orgId': json['orgId'] == null ? undefined : json['orgId'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'scope': json['scope'] == null ? undefined : AgentScopeFromJSON(json['scope']),
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'status': json['status'] == null ? undefined : AgentStatusFromJSON(json['status']),
        'capabilities': json['capabilities'] == null ? undefined : ((json['capabilities'] as Array<any>).map(V1AgentsIdPutRequestCapabilitiesInnerFromJSON)),
        'trigger': json['trigger'] == null ? undefined : V1AgentsIdPutRequestCapabilitiesInnerFromJSON(json['trigger']),
        'prompt': json['prompt'] == null ? undefined : json['prompt'],
        'subagents': json['subagents'] == null ? undefined : ((json['subagents'] as Array<any>).map(T0FromJSON)),
    };
}

export function V1AgentsIdPutRequestToJSON(json: any): V1AgentsIdPutRequest {
    return V1AgentsIdPutRequestToJSONTyped(json, false);
}

export function V1AgentsIdPutRequestToJSONTyped(value?: V1AgentsIdPutRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'orgId': value['orgId'],
        'name': value['name'],
        'description': value['description'],
        'scope': AgentScopeToJSON(value['scope']),
        'ownerId': value['ownerId'],
        'status': AgentStatusToJSON(value['status']),
        'capabilities': value['capabilities'] == null ? undefined : ((value['capabilities'] as Array<any>).map(V1AgentsIdPutRequestCapabilitiesInnerToJSON)),
        'trigger': V1AgentsIdPutRequestCapabilitiesInnerToJSON(value['trigger']),
        'prompt': value['prompt'],
        'subagents': value['subagents'] == null ? undefined : ((value['subagents'] as Array<any>).map(T0ToJSON)),
    };
}

