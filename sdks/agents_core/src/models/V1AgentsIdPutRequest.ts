/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime.js";
import type { AgentStatus } from "./AgentStatus.js";
import {
  AgentStatusFromJSON,
  AgentStatusFromJSONTyped,
  AgentStatusToJSON,
  AgentStatusToJSONTyped,
} from "./AgentStatus.js";
import type { V1AgentsIdPutRequestTrigger } from "./V1AgentsIdPutRequestTrigger.js";
import {
  V1AgentsIdPutRequestTriggerFromJSON,
  V1AgentsIdPutRequestTriggerFromJSONTyped,
  V1AgentsIdPutRequestTriggerToJSON,
  V1AgentsIdPutRequestTriggerToJSONTyped,
} from "./V1AgentsIdPutRequestTrigger.js";
import type { V1AgentsIdPutRequestCapabilitiesInner } from "./V1AgentsIdPutRequestCapabilitiesInner.js";
import {
  V1AgentsIdPutRequestCapabilitiesInnerFromJSON,
  V1AgentsIdPutRequestCapabilitiesInnerFromJSONTyped,
  V1AgentsIdPutRequestCapabilitiesInnerToJSON,
  V1AgentsIdPutRequestCapabilitiesInnerToJSONTyped,
} from "./V1AgentsIdPutRequestCapabilitiesInner.js";

/**
 *
 * @export
 * @interface V1AgentsIdPutRequest
 */
export interface V1AgentsIdPutRequest {
  /**
   *
   * @type {string}
   * @memberof V1AgentsIdPutRequest
   */
  orgId?: string;
  /**
   *
   * @type {string}
   * @memberof V1AgentsIdPutRequest
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof V1AgentsIdPutRequest
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof V1AgentsIdPutRequest
   */
  userId?: string;
  /**
   *
   * @type {string}
   * @memberof V1AgentsIdPutRequest
   */
  employeeId?: string;
  /**
   *
   * @type {AgentStatus}
   * @memberof V1AgentsIdPutRequest
   */
  status?: AgentStatus;
  /**
   *
   * @type {Array<V1AgentsIdPutRequestCapabilitiesInner>}
   * @memberof V1AgentsIdPutRequest
   */
  capabilities?: Array<V1AgentsIdPutRequestCapabilitiesInner>;
  /**
   *
   * @type {V1AgentsIdPutRequestTrigger}
   * @memberof V1AgentsIdPutRequest
   */
  trigger?: V1AgentsIdPutRequestTrigger;
  /**
   *
   * @type {string}
   * @memberof V1AgentsIdPutRequest
   */
  prompt?: string;
}

/**
 * Check if a given object implements the V1AgentsIdPutRequest interface.
 */
export function instanceOfV1AgentsIdPutRequest(
  value: object,
): value is V1AgentsIdPutRequest {
  return true;
}

export function V1AgentsIdPutRequestFromJSON(json: any): V1AgentsIdPutRequest {
  return V1AgentsIdPutRequestFromJSONTyped(json, false);
}

export function V1AgentsIdPutRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): V1AgentsIdPutRequest {
  if (json == null) {
    return json;
  }
  return {
    orgId: json["orgId"] == null ? undefined : json["orgId"],
    name: json["name"] == null ? undefined : json["name"],
    description: json["description"] == null ? undefined : json["description"],
    userId: json["userId"] == null ? undefined : json["userId"],
    employeeId: json["employeeId"] == null ? undefined : json["employeeId"],
    status:
      json["status"] == null ? undefined : AgentStatusFromJSON(json["status"]),
    capabilities:
      json["capabilities"] == null
        ? undefined
        : (json["capabilities"] as Array<any>).map(
            V1AgentsIdPutRequestCapabilitiesInnerFromJSON,
          ),
    trigger:
      json["trigger"] == null
        ? undefined
        : V1AgentsIdPutRequestTriggerFromJSON(json["trigger"]),
    prompt: json["prompt"] == null ? undefined : json["prompt"],
  };
}

export function V1AgentsIdPutRequestToJSON(json: any): V1AgentsIdPutRequest {
  return V1AgentsIdPutRequestToJSONTyped(json, false);
}

export function V1AgentsIdPutRequestToJSONTyped(
  value?: V1AgentsIdPutRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    orgId: value["orgId"],
    name: value["name"],
    description: value["description"],
    userId: value["userId"],
    employeeId: value["employeeId"],
    status: AgentStatusToJSON(value["status"]),
    capabilities:
      value["capabilities"] == null
        ? undefined
        : (value["capabilities"] as Array<any>).map(
            V1AgentsIdPutRequestCapabilitiesInnerToJSON,
          ),
    trigger: V1AgentsIdPutRequestTriggerToJSON(value["trigger"]),
    prompt: value["prompt"],
  };
}
