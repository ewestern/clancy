/* tslint:disable */
/* eslint-disable */
/**
 * Agent-Core API
 * Agent-Core Service - Control plane for multi-agent workflow orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookPostRequestAnyOf4ConnectionStatus } from './WebhookPostRequestAnyOf4ConnectionStatus';
import {
    WebhookPostRequestAnyOf4ConnectionStatusFromJSON,
    WebhookPostRequestAnyOf4ConnectionStatusFromJSONTyped,
    WebhookPostRequestAnyOf4ConnectionStatusToJSON,
    WebhookPostRequestAnyOf4ConnectionStatusToJSONTyped,
} from './WebhookPostRequestAnyOf4ConnectionStatus';

/**
 * 
 * @export
 * @interface WebhookPostRequestAnyOf4
 */
export interface WebhookPostRequestAnyOf4 {
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf4
     */
    type: WebhookPostRequestAnyOf4TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf4
     */
    orgId: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf4
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf4
     */
    timestamp: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf4
     */
    providerId: string;
    /**
     * 
     * @type {WebhookPostRequestAnyOf4ConnectionStatus}
     * @memberof WebhookPostRequestAnyOf4
     */
    connectionStatus: WebhookPostRequestAnyOf4ConnectionStatus;
    /**
     * 
     * @type {string}
     * @memberof WebhookPostRequestAnyOf4
     */
    connectionId: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WebhookPostRequestAnyOf4
     */
    externalAccountMetadata: { [key: string]: any; };
}


/**
 * @export
 */
export const WebhookPostRequestAnyOf4TypeEnum = {
    Providerconnectioncompleted: 'providerconnectioncompleted'
} as const;
export type WebhookPostRequestAnyOf4TypeEnum = typeof WebhookPostRequestAnyOf4TypeEnum[keyof typeof WebhookPostRequestAnyOf4TypeEnum];


/**
 * Check if a given object implements the WebhookPostRequestAnyOf4 interface.
 */
export function instanceOfWebhookPostRequestAnyOf4(value: object): value is WebhookPostRequestAnyOf4 {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('orgId' in value) || value['orgId'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    if (!('connectionStatus' in value) || value['connectionStatus'] === undefined) return false;
    if (!('connectionId' in value) || value['connectionId'] === undefined) return false;
    if (!('externalAccountMetadata' in value) || value['externalAccountMetadata'] === undefined) return false;
    return true;
}

export function WebhookPostRequestAnyOf4FromJSON(json: any): WebhookPostRequestAnyOf4 {
    return WebhookPostRequestAnyOf4FromJSONTyped(json, false);
}

export function WebhookPostRequestAnyOf4FromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookPostRequestAnyOf4 {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'orgId': json['orgId'],
        'userId': json['userId'],
        'timestamp': json['timestamp'],
        'providerId': json['providerId'],
        'connectionStatus': WebhookPostRequestAnyOf4ConnectionStatusFromJSON(json['connectionStatus']),
        'connectionId': json['connectionId'],
        'externalAccountMetadata': json['externalAccountMetadata'],
    };
}

export function WebhookPostRequestAnyOf4ToJSON(json: any): WebhookPostRequestAnyOf4 {
    return WebhookPostRequestAnyOf4ToJSONTyped(json, false);
}

export function WebhookPostRequestAnyOf4ToJSONTyped(value?: WebhookPostRequestAnyOf4 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'orgId': value['orgId'],
        'userId': value['userId'],
        'timestamp': value['timestamp'],
        'providerId': value['providerId'],
        'connectionStatus': WebhookPostRequestAnyOf4ConnectionStatusToJSON(value['connectionStatus']),
        'connectionId': value['connectionId'],
        'externalAccountMetadata': value['externalAccountMetadata'],
    };
}

