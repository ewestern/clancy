/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { HealthGet200ResponseStatus } from './HealthGet200ResponseStatus.js';
import {
    HealthGet200ResponseStatusFromJSON,
    HealthGet200ResponseStatusFromJSONTyped,
    HealthGet200ResponseStatusToJSON,
    HealthGet200ResponseStatusToJSONTyped,
} from './HealthGet200ResponseStatus.js';

/**
 * 
 * @export
 * @interface HealthGet200Response
 */
export interface HealthGet200Response {
    /**
     * 
     * @type {HealthGet200ResponseStatus}
     * @memberof HealthGet200Response
     */
    status: HealthGet200ResponseStatus;
}

/**
 * Check if a given object implements the HealthGet200Response interface.
 */
export function instanceOfHealthGet200Response(value: object): value is HealthGet200Response {
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function HealthGet200ResponseFromJSON(json: any): HealthGet200Response {
    return HealthGet200ResponseFromJSONTyped(json, false);
}

export function HealthGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthGet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'status': HealthGet200ResponseStatusFromJSON(json['status']),
    };
}

export function HealthGet200ResponseToJSON(json: any): HealthGet200Response {
    return HealthGet200ResponseToJSONTyped(json, false);
}

export function HealthGet200ResponseToJSONTyped(value?: HealthGet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': HealthGet200ResponseStatusToJSON(value['status']),
    };
}

