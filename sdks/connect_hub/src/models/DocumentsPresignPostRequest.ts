/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { DocumentsPresignPostRequestOwnershipScope } from './DocumentsPresignPostRequestOwnershipScope.js';
import {
    DocumentsPresignPostRequestOwnershipScopeFromJSON,
    DocumentsPresignPostRequestOwnershipScopeFromJSONTyped,
    DocumentsPresignPostRequestOwnershipScopeToJSON,
    DocumentsPresignPostRequestOwnershipScopeToJSONTyped,
} from './DocumentsPresignPostRequestOwnershipScope.js';

/**
 * 
 * @export
 * @interface DocumentsPresignPostRequest
 */
export interface DocumentsPresignPostRequest {
    /**
     * Original filename
     * @type {string}
     * @memberof DocumentsPresignPostRequest
     */
    filename: string;
    /**
     * MIME type of the file
     * @type {string}
     * @memberof DocumentsPresignPostRequest
     */
    mimeType: string;
    /**
     * File size in bytes
     * @type {number}
     * @memberof DocumentsPresignPostRequest
     */
    sizeBytes: number;
    /**
     * 
     * @type {DocumentsPresignPostRequestOwnershipScope}
     * @memberof DocumentsPresignPostRequest
     */
    ownershipScope?: DocumentsPresignPostRequestOwnershipScope;
    /**
     * Owner ID (optional for MVP)
     * @type {string}
     * @memberof DocumentsPresignPostRequest
     */
    ownerId?: string;
}

/**
 * Check if a given object implements the DocumentsPresignPostRequest interface.
 */
export function instanceOfDocumentsPresignPostRequest(value: object): value is DocumentsPresignPostRequest {
    if (!('filename' in value) || value['filename'] === undefined) return false;
    if (!('mimeType' in value) || value['mimeType'] === undefined) return false;
    if (!('sizeBytes' in value) || value['sizeBytes'] === undefined) return false;
    return true;
}

export function DocumentsPresignPostRequestFromJSON(json: any): DocumentsPresignPostRequest {
    return DocumentsPresignPostRequestFromJSONTyped(json, false);
}

export function DocumentsPresignPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentsPresignPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'filename': json['filename'],
        'mimeType': json['mimeType'],
        'sizeBytes': json['sizeBytes'],
        'ownershipScope': json['ownershipScope'] == null ? undefined : DocumentsPresignPostRequestOwnershipScopeFromJSON(json['ownershipScope']),
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
    };
}

export function DocumentsPresignPostRequestToJSON(json: any): DocumentsPresignPostRequest {
    return DocumentsPresignPostRequestToJSONTyped(json, false);
}

export function DocumentsPresignPostRequestToJSONTyped(value?: DocumentsPresignPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'filename': value['filename'],
        'mimeType': value['mimeType'],
        'sizeBytes': value['sizeBytes'],
        'ownershipScope': DocumentsPresignPostRequestOwnershipScopeToJSON(value['ownershipScope']),
        'ownerId': value['ownerId'],
    };
}

