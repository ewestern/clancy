/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CapabilityRisk } from './CapabilityRisk';
import {
    CapabilityRiskFromJSON,
    CapabilityRiskFromJSONTyped,
    CapabilityRiskToJSON,
    CapabilityRiskToJSONTyped,
} from './CapabilityRisk';

/**
 * 
 * @export
 * @interface Capability
 */
export interface Capability {
    /**
     * Capability identifier, e.g. chat.post
     * @type {string}
     * @memberof Capability
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Capability
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof Capability
     */
    description: string;
    /**
     * 
     * @type {any}
     * @memberof Capability
     */
    paramsSchema: any | null;
    /**
     * 
     * @type {any}
     * @memberof Capability
     */
    resultSchema: any | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Capability
     */
    requiredScopes: Array<string>;
    /**
     * 
     * @type {CapabilityRisk}
     * @memberof Capability
     */
    risk: CapabilityRisk;
    /**
     * 
     * @type {boolean}
     * @memberof Capability
     */
    available: boolean;
}



/**
 * Check if a given object implements the Capability interface.
 */
export function instanceOfCapability(value: object): value is Capability {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('paramsSchema' in value) || value['paramsSchema'] === undefined) return false;
    if (!('resultSchema' in value) || value['resultSchema'] === undefined) return false;
    if (!('requiredScopes' in value) || value['requiredScopes'] === undefined) return false;
    if (!('risk' in value) || value['risk'] === undefined) return false;
    if (!('available' in value) || value['available'] === undefined) return false;
    return true;
}

export function CapabilityFromJSON(json: any): Capability {
    return CapabilityFromJSONTyped(json, false);
}

export function CapabilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): Capability {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'displayName': json['displayName'],
        'description': json['description'],
        'paramsSchema': json['paramsSchema'],
        'resultSchema': json['resultSchema'],
        'requiredScopes': json['requiredScopes'],
        'risk': CapabilityRiskFromJSON(json['risk']),
        'available': json['available'],
    };
}

export function CapabilityToJSON(json: any): Capability {
    return CapabilityToJSONTyped(json, false);
}

export function CapabilityToJSONTyped(value?: Capability | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'displayName': value['displayName'],
        'description': value['description'],
        'paramsSchema': value['paramsSchema'],
        'resultSchema': value['resultSchema'],
        'requiredScopes': value['requiredScopes'],
        'risk': CapabilityRiskToJSON(value['risk']),
        'available': value['available'],
    };
}

