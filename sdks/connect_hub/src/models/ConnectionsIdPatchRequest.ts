/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConnectionsIdPatchRequest
 */
export interface ConnectionsIdPatchRequest {
    /**
     * 
     * @type {string}
     * @memberof ConnectionsIdPatchRequest
     */
    status: ConnectionsIdPatchRequestStatusEnum;
}


/**
 * @export
 */
export const ConnectionsIdPatchRequestStatusEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Error: 'error'
} as const;
export type ConnectionsIdPatchRequestStatusEnum = typeof ConnectionsIdPatchRequestStatusEnum[keyof typeof ConnectionsIdPatchRequestStatusEnum];


/**
 * Check if a given object implements the ConnectionsIdPatchRequest interface.
 */
export function instanceOfConnectionsIdPatchRequest(value: object): value is ConnectionsIdPatchRequest {
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ConnectionsIdPatchRequestFromJSON(json: any): ConnectionsIdPatchRequest {
    return ConnectionsIdPatchRequestFromJSONTyped(json, false);
}

export function ConnectionsIdPatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionsIdPatchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
    };
}

export function ConnectionsIdPatchRequestToJSON(json: any): ConnectionsIdPatchRequest {
    return ConnectionsIdPatchRequestToJSONTyped(json, false);
}

export function ConnectionsIdPatchRequestToJSONTyped(value?: ConnectionsIdPatchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
    };
}

