/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ConnectionStatus } from './ConnectionStatus.js';
import {
    ConnectionStatusFromJSON,
    ConnectionStatusFromJSONTyped,
    ConnectionStatusToJSON,
    ConnectionStatusToJSONTyped,
} from './ConnectionStatus.js';

/**
 * 
 * @export
 * @interface ConnectionsIdPatch200Response
 */
export interface ConnectionsIdPatch200Response {
    /**
     * 
     * @type {string}
     * @memberof ConnectionsIdPatch200Response
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ConnectionsIdPatch200Response
     */
    orgId: string;
    /**
     * 
     * @type {string}
     * @memberof ConnectionsIdPatch200Response
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof ConnectionsIdPatch200Response
     */
    providerId: string;
    /**
     * 
     * @type {string}
     * @memberof ConnectionsIdPatch200Response
     */
    displayName: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ConnectionsIdPatch200Response
     */
    capabilities: Array<string>;
    /**
     * 
     * @type {ConnectionStatus}
     * @memberof ConnectionsIdPatch200Response
     */
    status: ConnectionStatus;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ConnectionsIdPatch200Response
     */
    metadata: { [key: string]: any; };
}



/**
 * Check if a given object implements the ConnectionsIdPatch200Response interface.
 */
export function instanceOfConnectionsIdPatch200Response(value: object): value is ConnectionsIdPatch200Response {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('orgId' in value) || value['orgId'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('capabilities' in value) || value['capabilities'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    return true;
}

export function ConnectionsIdPatch200ResponseFromJSON(json: any): ConnectionsIdPatch200Response {
    return ConnectionsIdPatch200ResponseFromJSONTyped(json, false);
}

export function ConnectionsIdPatch200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionsIdPatch200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'orgId': json['orgId'],
        'userId': json['userId'],
        'providerId': json['providerId'],
        'displayName': json['displayName'],
        'capabilities': json['capabilities'],
        'status': ConnectionStatusFromJSON(json['status']),
        'metadata': json['metadata'],
    };
}

export function ConnectionsIdPatch200ResponseToJSON(json: any): ConnectionsIdPatch200Response {
    return ConnectionsIdPatch200ResponseToJSONTyped(json, false);
}

export function ConnectionsIdPatch200ResponseToJSONTyped(value?: ConnectionsIdPatch200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'orgId': value['orgId'],
        'userId': value['userId'],
        'providerId': value['providerId'],
        'displayName': value['displayName'],
        'capabilities': value['capabilities'],
        'status': ConnectionStatusToJSON(value['status']),
        'metadata': value['metadata'],
    };
}

