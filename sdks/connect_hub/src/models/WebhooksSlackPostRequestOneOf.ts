/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhooksSlackPostRequestOneOfAuthorizationsInner } from './WebhooksSlackPostRequestOneOfAuthorizationsInner';
import {
    WebhooksSlackPostRequestOneOfAuthorizationsInnerFromJSON,
    WebhooksSlackPostRequestOneOfAuthorizationsInnerFromJSONTyped,
    WebhooksSlackPostRequestOneOfAuthorizationsInnerToJSON,
    WebhooksSlackPostRequestOneOfAuthorizationsInnerToJSONTyped,
} from './WebhooksSlackPostRequestOneOfAuthorizationsInner';

/**
 * 
 * @export
 * @interface WebhooksSlackPostRequestOneOf
 */
export interface WebhooksSlackPostRequestOneOf {
    /**
     * 
     * @type {string}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    teamId: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    apiAppId: string;
    /**
     * 
     * @type {object}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    event: object;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    type: WebhooksSlackPostRequestOneOfTypeEnum;
    /**
     * 
     * @type {Array<WebhooksSlackPostRequestOneOfAuthorizationsInner>}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    authorizations: Array<WebhooksSlackPostRequestOneOfAuthorizationsInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    eventContext: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    eventId: string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksSlackPostRequestOneOf
     */
    eventTime: number;
}


/**
 * @export
 */
export const WebhooksSlackPostRequestOneOfTypeEnum = {
    EventCallback: 'event_callback'
} as const;
export type WebhooksSlackPostRequestOneOfTypeEnum = typeof WebhooksSlackPostRequestOneOfTypeEnum[keyof typeof WebhooksSlackPostRequestOneOfTypeEnum];


/**
 * Check if a given object implements the WebhooksSlackPostRequestOneOf interface.
 */
export function instanceOfWebhooksSlackPostRequestOneOf(value: object): value is WebhooksSlackPostRequestOneOf {
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('teamId' in value) || value['teamId'] === undefined) return false;
    if (!('apiAppId' in value) || value['apiAppId'] === undefined) return false;
    if (!('event' in value) || value['event'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('authorizations' in value) || value['authorizations'] === undefined) return false;
    if (!('eventContext' in value) || value['eventContext'] === undefined) return false;
    if (!('eventId' in value) || value['eventId'] === undefined) return false;
    if (!('eventTime' in value) || value['eventTime'] === undefined) return false;
    return true;
}

export function WebhooksSlackPostRequestOneOfFromJSON(json: any): WebhooksSlackPostRequestOneOf {
    return WebhooksSlackPostRequestOneOfFromJSONTyped(json, false);
}

export function WebhooksSlackPostRequestOneOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhooksSlackPostRequestOneOf {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['token'],
        'teamId': json['team_id'],
        'apiAppId': json['api_app_id'],
        'event': json['event'],
        'type': json['type'],
        'authorizations': ((json['authorizations'] as Array<any>).map(WebhooksSlackPostRequestOneOfAuthorizationsInnerFromJSON)),
        'eventContext': json['event_context'],
        'eventId': json['event_id'],
        'eventTime': json['event_time'],
    };
}

export function WebhooksSlackPostRequestOneOfToJSON(json: any): WebhooksSlackPostRequestOneOf {
    return WebhooksSlackPostRequestOneOfToJSONTyped(json, false);
}

export function WebhooksSlackPostRequestOneOfToJSONTyped(value?: WebhooksSlackPostRequestOneOf | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'token': value['token'],
        'team_id': value['teamId'],
        'api_app_id': value['apiAppId'],
        'event': value['event'],
        'type': value['type'],
        'authorizations': ((value['authorizations'] as Array<any>).map(WebhooksSlackPostRequestOneOfAuthorizationsInnerToJSON)),
        'event_context': value['eventContext'],
        'event_id': value['eventId'],
        'event_time': value['eventTime'],
    };
}

