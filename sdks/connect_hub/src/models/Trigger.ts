/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface Trigger
 */
export interface Trigger {
    /**
     * 
     * @type {string}
     * @memberof Trigger
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Trigger
     */
    providerId: string;
    /**
     * 
     * @type {string}
     * @memberof Trigger
     */
    displayName: string;
    /**
     * JSON schema defining the parameters that should be used when registering a trigger.
     * @type {any}
     * @memberof Trigger
     */
    paramsSchema: any | null;
    /**
     * 
     * @type {string}
     * @memberof Trigger
     */
    description: string;
    /**
     * 
     * @type {any}
     * @memberof Trigger
     */
    eventDetailsSchema: any | null;
    /**
     * JSON schema defining the parameters an agent may use when requesting options for a trigger.
     * @type {any}
     * @memberof Trigger
     */
    optionsRequestSchema?: any | null;
}

/**
 * Check if a given object implements the Trigger interface.
 */
export function instanceOfTrigger(value: object): value is Trigger {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('paramsSchema' in value) || value['paramsSchema'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('eventDetailsSchema' in value) || value['eventDetailsSchema'] === undefined) return false;
    return true;
}

export function TriggerFromJSON(json: any): Trigger {
    return TriggerFromJSONTyped(json, false);
}

export function TriggerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Trigger {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'providerId': json['providerId'],
        'displayName': json['displayName'],
        'paramsSchema': json['paramsSchema'],
        'description': json['description'],
        'eventDetailsSchema': json['eventDetailsSchema'],
        'optionsRequestSchema': json['optionsRequestSchema'] == null ? undefined : json['optionsRequestSchema'],
    };
}

export function TriggerToJSON(json: any): Trigger {
    return TriggerToJSONTyped(json, false);
}

export function TriggerToJSONTyped(value?: Trigger | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'providerId': value['providerId'],
        'displayName': value['displayName'],
        'paramsSchema': value['paramsSchema'],
        'description': value['description'],
        'eventDetailsSchema': value['eventDetailsSchema'],
        'optionsRequestSchema': value['optionsRequestSchema'],
    };
}

