/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TriggerRegistrationConnection } from './TriggerRegistrationConnection';
import {
    TriggerRegistrationConnectionFromJSON,
    TriggerRegistrationConnectionFromJSONTyped,
    TriggerRegistrationConnectionToJSON,
    TriggerRegistrationConnectionToJSONTyped,
} from './TriggerRegistrationConnection';

/**
 * 
 * @export
 * @interface TriggerRegistration
 */
export interface TriggerRegistration {
    /**
     * 
     * @type {string}
     * @memberof TriggerRegistration
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof TriggerRegistration
     */
    agentId: string;
    /**
     * 
     * @type {string}
     * @memberof TriggerRegistration
     */
    providerId: string;
    /**
     * 
     * @type {string}
     * @memberof TriggerRegistration
     */
    triggerId: string;
    /**
     * 
     * @type {TriggerRegistrationConnection}
     * @memberof TriggerRegistration
     */
    connection?: TriggerRegistrationConnection;
    /**
     * 
     * @type {string}
     * @memberof TriggerRegistration
     */
    connectionId: string | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof TriggerRegistration
     */
    params: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof TriggerRegistration
     */
    expiresAt: string;
    /**
     * 
     * @type {string}
     * @memberof TriggerRegistration
     */
    readonly createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof TriggerRegistration
     */
    readonly updatedAt?: string;
}

/**
 * Check if a given object implements the TriggerRegistration interface.
 */
export function instanceOfTriggerRegistration(value: object): value is TriggerRegistration {
    if (!('agentId' in value) || value['agentId'] === undefined) return false;
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    if (!('triggerId' in value) || value['triggerId'] === undefined) return false;
    if (!('connectionId' in value) || value['connectionId'] === undefined) return false;
    if (!('params' in value) || value['params'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    return true;
}

export function TriggerRegistrationFromJSON(json: any): TriggerRegistration {
    return TriggerRegistrationFromJSONTyped(json, false);
}

export function TriggerRegistrationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TriggerRegistration {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'agentId': json['agentId'],
        'providerId': json['providerId'],
        'triggerId': json['triggerId'],
        'connection': json['connection'] == null ? undefined : TriggerRegistrationConnectionFromJSON(json['connection']),
        'connectionId': json['connectionId'],
        'params': json['params'],
        'expiresAt': json['expiresAt'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
    };
}

export function TriggerRegistrationToJSON(json: any): TriggerRegistration {
    return TriggerRegistrationToJSONTyped(json, false);
}

export function TriggerRegistrationToJSONTyped(value?: Omit<TriggerRegistration, 'id'|'createdAt'|'updatedAt'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'agentId': value['agentId'],
        'providerId': value['providerId'],
        'triggerId': value['triggerId'],
        'connection': TriggerRegistrationConnectionToJSON(value['connection']),
        'connectionId': value['connectionId'],
        'params': value['params'],
        'expiresAt': value['expiresAt'],
    };
}

