/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { DocumentStatus } from './DocumentStatus.js';
import {
    DocumentStatusFromJSON,
    DocumentStatusFromJSONTyped,
    DocumentStatusToJSON,
    DocumentStatusToJSONTyped,
} from './DocumentStatus.js';
import type { DocumentsIngestionCompletePostRequestMetadata } from './DocumentsIngestionCompletePostRequestMetadata.js';
import {
    DocumentsIngestionCompletePostRequestMetadataFromJSON,
    DocumentsIngestionCompletePostRequestMetadataFromJSONTyped,
    DocumentsIngestionCompletePostRequestMetadataToJSON,
    DocumentsIngestionCompletePostRequestMetadataToJSONTyped,
} from './DocumentsIngestionCompletePostRequestMetadata.js';

/**
 * 
 * @export
 * @interface DocumentsIngestionCompletePostRequest
 */
export interface DocumentsIngestionCompletePostRequest {
    /**
     * 
     * @type {string}
     * @memberof DocumentsIngestionCompletePostRequest
     */
    documentId: string;
    /**
     * 
     * @type {DocumentStatus}
     * @memberof DocumentsIngestionCompletePostRequest
     */
    status: DocumentStatus;
    /**
     * 
     * @type {string}
     * @memberof DocumentsIngestionCompletePostRequest
     */
    error?: string;
    /**
     * 
     * @type {DocumentsIngestionCompletePostRequestMetadata}
     * @memberof DocumentsIngestionCompletePostRequest
     */
    metadata?: DocumentsIngestionCompletePostRequestMetadata;
}



/**
 * Check if a given object implements the DocumentsIngestionCompletePostRequest interface.
 */
export function instanceOfDocumentsIngestionCompletePostRequest(value: object): value is DocumentsIngestionCompletePostRequest {
    if (!('documentId' in value) || value['documentId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function DocumentsIngestionCompletePostRequestFromJSON(json: any): DocumentsIngestionCompletePostRequest {
    return DocumentsIngestionCompletePostRequestFromJSONTyped(json, false);
}

export function DocumentsIngestionCompletePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentsIngestionCompletePostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'documentId': json['documentId'],
        'status': DocumentStatusFromJSON(json['status']),
        'error': json['error'] == null ? undefined : json['error'],
        'metadata': json['metadata'] == null ? undefined : DocumentsIngestionCompletePostRequestMetadataFromJSON(json['metadata']),
    };
}

export function DocumentsIngestionCompletePostRequestToJSON(json: any): DocumentsIngestionCompletePostRequest {
    return DocumentsIngestionCompletePostRequestToJSONTyped(json, false);
}

export function DocumentsIngestionCompletePostRequestToJSONTyped(value?: DocumentsIngestionCompletePostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'documentId': value['documentId'],
        'status': DocumentStatusToJSON(value['status']),
        'error': value['error'],
        'metadata': DocumentsIngestionCompletePostRequestMetadataToJSON(value['metadata']),
    };
}

