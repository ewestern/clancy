/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  ErrorResponse,
  KnowledgeSnippetsBulkPostRequestOwnershipScope,
  KnowledgeSnippetsGet200Response,
} from '../models/index.js';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    KnowledgeSnippetsBulkPostRequestOwnershipScopeFromJSON,
    KnowledgeSnippetsBulkPostRequestOwnershipScopeToJSON,
    KnowledgeSnippetsGet200ResponseFromJSON,
    KnowledgeSnippetsGet200ResponseToJSON,
} from '../models/index.js';

export interface KnowledgeSnippetsGetRequest {
    scope?: KnowledgeSnippetsBulkPostRequestOwnershipScope;
    query?: string;
    page?: number;
    limit?: number;
}

/**
 * 
 */
export class KnowledgeApi extends runtime.BaseAPI {

    /**
     * List knowledge snippets with optional filters
     */
    async knowledgeSnippetsGetRaw(requestParameters: KnowledgeSnippetsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<KnowledgeSnippetsGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters['scope'] != null) {
            queryParameters['scope'] = requestParameters['scope'];
        }

        if (requestParameters['query'] != null) {
            queryParameters['query'] = requestParameters['query'];
        }

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/knowledge_snippets`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => KnowledgeSnippetsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * List knowledge snippets with optional filters
     */
    async knowledgeSnippetsGet(requestParameters: KnowledgeSnippetsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<KnowledgeSnippetsGet200Response> {
        const response = await this.knowledgeSnippetsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
