/* tslint:disable */
/* eslint-disable */
/**
 * ConnectHub API
 * Unified integration, token, and proxy layer for Clancy Digital-Employees
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  WebhooksSlackPostRequest,
} from '../models/index.js';
import {
    WebhooksSlackPostRequestFromJSON,
    WebhooksSlackPostRequestToJSON,
} from '../models/index.js';

export interface WebhooksInternalPostRequest {
    requestBody?: { [key: string]: any; };
}

export interface WebhooksSlackPostOperationRequest {
    webhooksSlackPostRequest?: WebhooksSlackPostRequest;
}

/**
 * 
 */
export class WebhooksApi extends runtime.BaseAPI {

    /**
     * Internal webhook
     */
    async webhooksInternalPostRaw(requestParameters: WebhooksInternalPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/webhooks/internal`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['requestBody'],
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Internal webhook
     */
    async webhooksInternalPost(requestParameters: WebhooksInternalPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.webhooksInternalPostRaw(requestParameters, initOverrides);
    }

    /**
     * Slack Events API callback
     */
    async webhooksSlackPostRaw(requestParameters: WebhooksSlackPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/webhooks/slack`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WebhooksSlackPostRequestToJSON(requestParameters['webhooksSlackPostRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Slack Events API callback
     */
    async webhooksSlackPost(requestParameters: WebhooksSlackPostOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.webhooksSlackPostRaw(requestParameters, initOverrides);
    }

}
